name: Build application and create docker image
env:
  IMAGE_TAG_HASH: ""
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  HELM-CHART-PATH : ""
  DOCKER-CONTEXT-PATH: ""

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
    inputs:
      docker-context-path:
        required: false
        type: string
      maven-build-command:
        required: false
        type: string

    secrets:
      token:
        required: false


env:
  IMAGE_NAMESPACE: "test-oss"
  IMAGE_NAME: "test-work-flow-service"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Set environment variables
      run: |
        echo "DOCKER-CONTEXT-PATH=${{ inputs.docker-context-path || '.' }}" >> $GITHUB_ENV
        echo "MAVEN-BUILD-COMMAND=${{ inputs.maven-build-command || 'mvn -B package spring-boot:repackage --file pom.xml' }}" >> $GITHUB_ENV

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
      - name: Build with Maven
        run: ${{env.MAVEN-BUILD-COMMAND}}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Log in to the Container registry
      uses: docker/login-action@v3.2.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Pom info
      id: extract-pom-info
      uses: andreacomo/maven-gav-extractor@v2.0.1
    - name: Log GAV
      run: |
        echo ${{ steps.extract-pom-info.outputs.group-id }}
        echo ${{ steps.extract-pom-info.outputs.artifact-id }}
        echo ${{ steps.extract-pom-info.outputs.version }}
        echo ${{ steps.extract-pom-info.outputs.name }}
      shell: bash

    - id: lower-repo
      name: Repository to lowercase
      run: |
        echo "githubowner=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT

    - name: Determine image tags hash
      if: env.IMAGE_TAG_HASH == ''
      run: |
        echo "IMAGE_TAG_HASH=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6.2.0
      with:
        context: ${{env.DOCKER-CONTEXT-PATH}}
        file: ${{env.DOCKER-CONTEXT-PATH}}/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{  steps.lower-repo.outputs.githubowner }}/${{  steps.extract-pom-info.outputs.artifact-id }}:${{ steps.extract-pom-info.outputs.version }}-${{ env.IMAGE_TAG_HASH }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
            ARTIFACT_ID=${{  steps.extract-pom-info.outputs.artifact-id }}
            ARTIFACT_VERSION=${{ steps.extract-pom-info.outputs.version }}
            PROJECT_JAR_NAME=${{  steps.extract-device-shadow-api.outputs.artifact-id }}-${{ steps.extract-device-shadow-api.outputs.version }}
            ENVIRONMENT=ignite2
